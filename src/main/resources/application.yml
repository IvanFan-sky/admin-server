spring:
  application:
    name: admin-server
  profiles:
    active: dev # 默认激活开发环境配置
  # Redis 配置 (根据实际情况修改)
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      # password: your_redis_password # 如果有密码
      database: 0 # 默认数据库
  # 数据库配置 (根据实际情况修改)
  datasource:
    url: jdbc:mysql://localhost:3306/admin_db?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  # Cache 配置
  cache:
    type: redis # 使用 redis 作为缓存

# 服务器配置
server:
  port: 8080 # 服务端口

# Mybatis Plus 配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml # Mapper XML 文件位置
  type-aliases-package: com.spark.adminserver.model.entity # 实体类包路径 (Updated path)
  global-config:
    db-config:
      # logic-delete-field: deleted # 全局逻辑删除字段名 (如果需要)
      # logic-delete-value: 1 # 逻辑已删除值 (默认为 1)
      # logic-not-delete-value: 0 # 逻辑未删除值 (默认为 0)
      id-type: ASSIGN_ID # ID 生成策略，ASSIGN_ID 表示手动分配或使用数据库自增 (根据需要调整)
  configuration:
    map-underscore-to-camel-case: true # 开启驼峰命名转换
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl # 使用 SLF4J 输出日志

# Springdoc OpenAPI (Swagger) 配置
springdoc:
  api-docs:
    path: /v3/api-docs # API 文档路径
  swagger-ui:
    path: /swagger-ui.html # Swagger UI 路径
    display-request-duration: true # 显示请求耗时
    groups-order: DESC # 分组排序
  packages-to-scan: com.spark.adminserver.controller # Controller 包路径 (根据实际项目结构修改)
  # 基本信息配置 (可选)
  # info:
  #   title: Admin Server API
  #   description: 后台管理服务接口文档
  #   version: v1.0.0
  #   contact:
  #     name: Your Name
  #     email: your.email@example.com
  #     url: https://yourwebsite.com

# Actuator 配置
management:
  endpoints:
    web:
      exposure:
        include: '*' # 暴露所有 Actuator 端点 (生产环境建议按需暴露)
  endpoint:
    health:
      show-details: always # Health 端点显示详细信息

# 日志配置由 logback-spring.xml 管理

